################################ People Management ########################################
### Get all people (admin only)

GET http://localhost:8080/api/v1/people
Authorization: Basic admin goodpass

### Get people by id (admin only)
GET http://localhost:8080/api/v1/people/2
Authorization: Basic admin goodpass

### Delete people by id (admin only)
DELETE http://localhost:8080/api/v1/people/3
Authorization: Basic admin goodpass

### Add people (admin only)
POST http://localhost:8080/api/v1/people
Content-Type: application/json
Authorization: Basic admin goodpass

{
    "firstName": "firstName",
    "lastName": "lastName",
    "emailId": "emailId@asd.com",
    "age": "1",
    "condition": "state.condition",
    "username": "username",
    "password": "password",
    "authorities": "ROLE_PATIENT"
}

### Update people by id (admin only)
PUT http://localhost:8080/api/v1/people/2
Content-Type: application/json
Authorization: Basic admin goodpass

{
    "firstName": "firstName",
    "lastName": "lastName",
    "emailId": "emailId@asd.com",
    "age": "20",
    "condition": "state.condition",
    "username": "username12",
    "password": "password",
    "authorities": "ROLE_ADMIN"
}
// Should create another request to update password and authorities, 
//username cannot be change
    

### login (patient only)
### GET http://localhost:8080/api/v1/login/{username}
### if 401/404 error, incorrect username or password
### if 403 error, user is not a patient
### Rmb to keep username, password and id in localstorage/cookies of the frontend

GET http://localhost:8080/api/v1/login/username
Authorization: Basic username password

### login (admin only)
### GET http://localhost:8080/api/v1/admin/login/{username}
### if 401/404 error, incorrect username or password
### if 403 error, user is not a admin
### Rmb to keep username, password and id in localstorage/cookies of the frontend
GET http://localhost:8080/api/v1/admin/login/admin
Authorization: Basic admin goodpass

################################## Qticket ########################################

### Get new QTicket no with patientId (Patient /or admin)
### (get patient id when during login.)
POST http://localhost:8080/api/v1/patients/2/getnewQ
Authorization: Basic admin goodpass
Content-Type: application/json

{

}

### Get Latest Qticket by patient id (Patient /or admin) 
### get patient id when during login. 
GET  http://localhost:8080/api/v1/patients/2/getQ
Authorization: Basic admin goodpass

### Get all QTickets (admin only)
GET http://localhost:8080/api/v1/getAllQ
Authorization: Basic admin goodpass






################################## Room ########################################

### Get all rooms
GET http://localhost:8080/api/v1/rooms
Authorization: Basic admin goodpass

### add room
POST http://localhost:8080/api/v1/rooms
Authorization: Basic admin goodpass
Content-Type: application/json

{

}

################################## DateTimeSlot ########################################

### Book new appointment by patientid and datetimeslotid, must be within 3 days from today
POST http://localhost:8080/api/v1/appointment/bookNewAppointment/2/5
Content-Type: application/json
Authorization: Basic admin goodpass

{
    "patientId": 1,
    "dateTimeSlotId": 5
}

### Query all available TimeSlot by date
GET http://localhost:8080/api/v1/appointment/queryAvailableTimeSlot/2023-10-04
Authorization: Basic admin goodpass

### Get all DateTimeSlot 
GET http://localhost:8080/api/v1/datetimeslot
Authorization: Basic admin goodpass

################################ By nicholas ######################################
### 1 ## Get all people
GET http://localhost:8080/api/v1/people
Authorization: Basic admin goodpass

### Get p where id 3
GET http://localhost:8080/api/v1/people/1
Authorization: Basic admin goodpass

### 2 ## Delete p where id 2
DELETE http://localhost:8080/api/v1/people/3
Authorization: Basic user1 goodpass

### 3 ## Add people
POST http://localhost:8080/api/v1/people
Authorization: Basic user1 goodpass
Content-Type: application/json
# password: should be at least 8 to 10 characters

{
    "firstName": "zoo",
    "lastName": "king",
    "condition": "critical",
    "age": "40",
    "emailId": "zoo@ab.xy",
    "username": "user1",
    "password": "goodpass", 
    "authorities": "ROLE_USER"
}

### 4 ## Update p where id 1
PUT http://localhost:8080/api/v1/people/2
Content-Type: application/json
Authorization: Basic admin goodpass
# password: should be at least 8 to 10 characters

{
    "firstName": "lion",
    "lastName": "queen",
    "condition": "mild",
    "age": "20",
    "emailId": "zoo@xxx.yy",
    "username": "user1",
    "password": "goodpass", 
    "authorities": "ROLE_ADMIN"
}

###########################################################

#################################### SCAPPED ########################################
# ################################## Patient ########################################

# ### Get all patients
# GET http://localhost:8080/api/v2/patients

# ### Save patient
# POST http://localhost:8080/api/v2/patients
# Content-Type: application/json

# {
#     "firstName": "Mark",
#     "lastName": "lastName",
#     "emailId": "email",
#     "age": "1",
#     "condition": ["state.condition"]
# }

# ### Update Patient by id
# PUT http://localhost:8080/api/v2/patients/7
# Content-Type: application/json

# {
#     "firstName": "ChangedFirsasedtname",
#     "lastName": "lastName",
#     "emailId": "email",
#     "age": "1",
#     "condition": ["state.condition"]
# }